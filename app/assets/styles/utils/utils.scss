@use 'sass:math';
@use 'variables' as *;
@use 'breakpoints' as *;

// Sizing in em units
@function em($pixels, $context: $font-size-default) {
  @return #{math.div($pixels, $context)}em;
}

@function size-by-vw($width, $context: $font-size-default) {
  @return math.div(100vw, $width) * $context;
}

// Interaction states
@mixin hover {
  @media (hover: hover) {
    &:hover {
      @content;
    }
  }
}

@mixin text-clip($lines: 3) {
  display: -webkit-box;
  overflow: hidden;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
}

@mixin active {
  @media (hover: hover) {
    &:active {
      @content;
    }
  }
}

@mixin focus {
  @media (hover: hover) {
    &:focus,
    &:focus-within,
    &:focus-visible {
      @content;
    }
  }
}

@mixin active-focus() {
  @media (hover: hover) {
    &:active,
    &:focus,
    &:focus-visible {
      @content;
    }
  }
}

@mixin hover-active-focus() {
  &:active,
  &:focus-visible {
    @content;
  }

  @include hover {
    @content;
  }
}

// Sizing
@mixin box($size) {
  width: $size;
  height: $size;
}

// Scroll
@mixin hide-scroll {
  -ms-overflow-style: none; // IE and Edge
  scrollbar-width: none; // Firefox
  &::-webkit-scrollbar {
    display: none;
  }
}

// Breakpoints
@mixin media-breakpoint-desktop {
  @include media-breakpoint-up(sm) {
    @content;
  }
}

@mixin media-breakpoint-mobile {
  @include media-breakpoint-down(sm) {
    @content;
  }
}

@mixin rtl {
  [lang='ar'] & {
    @content;
  }
}

@mixin animate-height {
  transition: height 1s ease;
}
